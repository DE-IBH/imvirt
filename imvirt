#!/usr/bin/perl

# imvirt - I'm virtualized?
#
# Authors:
#   Thomas Liske <liske@ibh.de>
#
# Copyright Holder:
#   2008 - 2012 (C) IBH IT-Service GmbH [http://www.ibh.de/]
#
# License:
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this package; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
#

use strict;
use warnings;
use ImVirt;
use Getopt::Long;

sub HELP_MESSAGE {
    my $prod = 'ImVirt';
    $prod .= ' Portable' if(exists($ENV{PAR_0}) && __FILE__ =~ /^script\//);

    print STDERR <<EOH;
$prod $ImVirt::VERSION - I'm virtualized?

Authors:
  Thomas Liske <liske\@ibh.de>

Copyright Holder:
  2008 - 2013 (C) IBH IT-Service GmbH [http://www.ibh.de/]

License:
  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

About:
  imvirt tries to detect if it runs on a physical machine or on a
  virtualized one. If it detects that it is a virtualized one it also
  tries to find out which virtualization technology is used.

Usage:
  imvirt [-d] [-c|-m]
    -d			enable debug output
    -c			detect virtualization containers only
    -m			detect virtual machines only

Output (virtualization containers):
EOH
    #'

    print "    ",join("\n    ", imv_get_pos_results_vc()),"\n\n";

    print "Output (virtual machines):\n";
    print "    ",join("\n    ", imv_get_pos_results_vm()),"\n\n";

    exit;
}

my %opts;
my $mode;
GetOptions(
    'd' => sub { ImVirt::set_debug(1); },
    'c' => sub { $mode .= 'c'; },
    'm' => sub { $mode .= 'm'; },
    help => sub { HELP_MESSAGE(); },
) or HELP_MESSAGE();

$mode = 'cm' unless(defined($mode));

my $vc = ($mode =~ /c/ ? imv_get_vc(IMV_PROB_DEFAULT) : IMV_NONE);
if($vc ne IMV_NONE) {
    print "$vc\n";
}
else {
    if($mode =~ /m/) {
	print imv_get_vm(IMV_PROB_DEFAULT),"\n";
    }
    else {
	print IMV_NONE,"\n";
    }
}
